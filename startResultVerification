#!/bin/bash
# 
# OWL Reasoner Evaluation Workshop (ORE) 2013
# Last updated: 18-Jul-13
# 
# base="/Volumes/Data/ORE"
base="/shareddata/homes/samantha"
ontbase="$base/ontologies"
satbase="$ontbase/sat"
rbase="$base/reasoners"
# 
# Using the script:
#
# sh startResultVerification <Operation> <Output>
#
# 	<Operation>		One of: sat | classification | consistency
#	<Output>		Output folder
# 	<Profiles>		Profiles to be tested, any of: dl | el | rl (space separated)
# 
declare -a reasoners=(basevisor chainsaw elephant elk-loading-counted elk-loading-not-counted fact hermit jcel jfact konclude more-hermit more-pellet snorocket treasoner trowl wsclassifier)
args=("$@") 
ELEMENTS=${#args[@]}
if [ $ELEMENTS -gt 2 ]; then
	ext=""
	if [ "$1" = "classification" ]; then
		ext="owl"
	else
		ext="csv"
	fi	
	for (( i=2;i<$ELEMENTS;i++ )); do 
		profile=${args[${i}]}
		for file in $ontbase/functional/$profile/*; do
			filename=`basename $file`
			echo "Ontology: $filename"
			echo "Ontology filepath: $file"
			echo "Operation: $1"
			echo "Output folder: $2/$profile"
			cmd=""
			for reasoner in ${reasoners[@]}
			do
				cmd="$cmd $rbase/$reasoner/output/$filename/$1.$ext"
			done
			satfile="nothing" # irrelevant for classification or consistency
			if [ "$1" = "sat" ]; then
				satfile="$satbase/$profile/$filename"_sat.txt
			fi			
			java -Xmx8G -jar ResultChecker.jar $1 $2/$profile $satfile $cmd
			printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
		done
	done
else
	echo "! Insufficient or no parameters given"
	echo ""
	echo "Usage:	sh startResultVerification <Operation> <Output> <Profiles>"
	echo "	<Operation>		One of: sat | classification | consistency"
	echo "	<Output>		Output folder"
	echo "	<Profiles>		Profiles to be tested, any of: dl | el | rl (space separated)"
	echo ""
fi